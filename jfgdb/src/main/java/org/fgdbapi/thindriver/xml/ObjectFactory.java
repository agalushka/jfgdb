//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.09.21 at 09:16:28 AM CEST 
//


package org.fgdbapi.thindriver.xml;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the test package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Field_QNAME = new QName("http://www.esri.com/schemas/ArcGIS/10.1", "Field");
    private final static QName _Index_QNAME = new QName("http://www.esri.com/schemas/ArcGIS/10.1", "Index");
    private final static QName _DataElement_QNAME = new QName("http://www.esri.com/schemas/ArcGIS/10.1", "DataElement");
    private final static QName _Subtype_QNAME = new QName("http://www.esri.com/schemas/ArcGIS/10.1", "Subtype");
    private final static QName _Domain_QNAME = new QName("http://www.esri.com/schemas/ArcGIS/10.1", "Domain");
    private final static QName _DataElementMetadata_QNAME = new QName("", "Metadata");
    private final static QName _PropertySetPropertyValue_QNAME = new QName("", "Value");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: test
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Subtype }
     * 
     */
    public Subtype createSubtype() {
        return new Subtype();
    }

    /**
     * Create an instance of {@link DEDataset }
     * 
     */
    public DEDataset createDEDataset() {
        return new DEDataset();
    }

    /**
     * Create an instance of {@link Index }
     * 
     */
    public Index createIndex() {
        return new Index();
    }

    /**
     * Create an instance of {@link Field }
     * 
     */
    public Field createField() {
        return new Field();
    }

    /**
     * Create an instance of {@link PolygonB }
     * 
     */
    public PolygonB createPolygonB() {
        return new PolygonB();
    }

    /**
     * Create an instance of {@link RangeDomain }
     * 
     */
    public RangeDomain createRangeDomain() {
        return new RangeDomain();
    }

    /**
     * Create an instance of {@link DEFeatureDataset }
     * 
     */
    public DEFeatureDataset createDEFeatureDataset() {
        return new DEFeatureDataset();
    }

    /**
     * Create an instance of {@link Path }
     * 
     */
    public Path createPath() {
        return new Path();
    }

    /**
     * Create an instance of {@link MultipointN }
     * 
     */
    public MultipointN createMultipointN() {
        return new MultipointN();
    }

    /**
     * Create an instance of {@link ArrayOfPoint }
     * 
     */
    public ArrayOfPoint createArrayOfPoint() {
        return new ArrayOfPoint();
    }

    /**
     * Create an instance of {@link MultipointB }
     * 
     */
    public MultipointB createMultipointB() {
        return new MultipointB();
    }

    /**
     * Create an instance of {@link GeographicCoordinateSystem }
     * 
     */
    public GeographicCoordinateSystem createGeographicCoordinateSystem() {
        return new GeographicCoordinateSystem();
    }

    /**
     * Create an instance of {@link ArrayOfPath }
     * 
     */
    public ArrayOfPath createArrayOfPath() {
        return new ArrayOfPath();
    }

    /**
     * Create an instance of {@link BezierCurve }
     * 
     */
    public BezierCurve createBezierCurve() {
        return new BezierCurve();
    }

    /**
     * Create an instance of {@link ArrayOfSurfacePatch }
     * 
     */
    public ArrayOfSurfacePatch createArrayOfSurfacePatch() {
        return new ArrayOfSurfacePatch();
    }

    /**
     * Create an instance of {@link ArrayOfCodedValue }
     * 
     */
    public ArrayOfCodedValue createArrayOfCodedValue() {
        return new ArrayOfCodedValue();
    }

    /**
     * Create an instance of {@link Geometry }
     * 
     */
    public Geometry createGeometry() {
        return new Geometry();
    }

    /**
     * Create an instance of {@link PolygonN }
     * 
     */
    public PolygonN createPolygonN() {
        return new PolygonN();
    }

    /**
     * Create an instance of {@link CodedValue }
     * 
     */
    public CodedValue createCodedValue() {
        return new CodedValue();
    }

    /**
     * Create an instance of {@link ArrayOfSubtype }
     * 
     */
    public ArrayOfSubtype createArrayOfSubtype() {
        return new ArrayOfSubtype();
    }

    /**
     * Create an instance of {@link MultiPatchN }
     * 
     */
    public MultiPatchN createMultiPatchN() {
        return new MultiPatchN();
    }

    /**
     * Create an instance of {@link PointB }
     * 
     */
    public PointB createPointB() {
        return new PointB();
    }

    /**
     * Create an instance of {@link GeometryDef }
     * 
     */
    public GeometryDef createGeometryDef() {
        return new GeometryDef();
    }

    /**
     * Create an instance of {@link DEGeoDataset }
     * 
     */
    public DEGeoDataset createDEGeoDataset() {
        return new DEGeoDataset();
    }

    /**
     * Create an instance of {@link ArrayOfPolyline }
     * 
     */
    public ArrayOfPolyline createArrayOfPolyline() {
        return new ArrayOfPolyline();
    }

    /**
     * Create an instance of {@link PolylineB }
     * 
     */
    public PolylineB createPolylineB() {
        return new PolylineB();
    }

    /**
     * Create an instance of {@link PolylineN }
     * 
     */
    public PolylineN createPolylineN() {
        return new PolylineN();
    }

    /**
     * Create an instance of {@link CircularArc }
     * 
     */
    public CircularArc createCircularArc() {
        return new CircularArc();
    }

    /**
     * Create an instance of {@link ArrayOfPropertySetProperty }
     * 
     */
    public ArrayOfPropertySetProperty createArrayOfPropertySetProperty() {
        return new ArrayOfPropertySetProperty();
    }

    
    /**
     * Create an instance of {@link MultiPatchB }
     * 
     */
    public MultiPatchB createMultiPatchB() {
        return new MultiPatchB();
    }

    /**
     * Create an instance of {@link Names }
     * 
     */
    public Names createNames() {
        return new Names();
    }

    /**
     * Create an instance of {@link PointN }
     * 
     */
    public PointN createPointN() {
        return new PointN();
    }

    /**
     * Create an instance of {@link XmlPropertySet }
     * 
     */
    public XmlPropertySet createXmlPropertySet() {
        return new XmlPropertySet();
    }

    /**
     * Create an instance of {@link Indexes }
     * 
     */
    public Indexes createIndexes() {
        return new Indexes();
    }

    /**
     * Create an instance of {@link ArrayOfSubtypeFieldInfo }
     * 
     */
    public ArrayOfSubtypeFieldInfo createArrayOfSubtypeFieldInfo() {
        return new ArrayOfSubtypeFieldInfo();
    }

    /**
     * Create an instance of {@link EllipticArc }
     * 
     */
    public EllipticArc createEllipticArc() {
        return new EllipticArc();
    }

    /**
     * Create an instance of {@link DETable }
     * 
     */
    public DETable createDETable() {
        return new DETable();
    }

    /**
     * Create an instance of {@link TriangleFan }
     * 
     */
    public TriangleFan createTriangleFan() {
        return new TriangleFan();
    }

    /**
     * Create an instance of {@link EnvelopeN }
     * 
     */
    public EnvelopeN createEnvelopeN() {
        return new EnvelopeN();
    }

    /**
     * Create an instance of {@link Ring }
     * 
     */
    public Ring createRing() {
        return new Ring();
    }

    /**
     * Create an instance of {@link ProjectedCoordinateSystem }
     * 
     */
    public ProjectedCoordinateSystem createProjectedCoordinateSystem() {
        return new ProjectedCoordinateSystem();
    }

    /**
     * Create an instance of {@link EnvelopeB }
     * 
     */
    public EnvelopeB createEnvelopeB() {
        return new EnvelopeB();
    }

    /**
     * Create an instance of {@link CodedValueDomain }
     * 
     */
    public CodedValueDomain createCodedValueDomain() {
        return new CodedValueDomain();
    }

    /**
     * Create an instance of {@link ArrayOfControllerMembership }
     * 
     */
    public ArrayOfControllerMembership createArrayOfControllerMembership() {
        return new ArrayOfControllerMembership();
    }

    /**
     * Create an instance of {@link ArrayOfField }
     * 
     */
    public ArrayOfField createArrayOfField() {
        return new ArrayOfField();
    }

    /**
     * Create an instance of {@link UnknownCoordinateSystem }
     * 
     */
    public UnknownCoordinateSystem createUnknownCoordinateSystem() {
        return new UnknownCoordinateSystem();
    }

    /**
     * Create an instance of {@link DEFeatureClass }
     * 
     */
    public DEFeatureClass createDEFeatureClass() {
        return new DEFeatureClass();
    }

    /**
     * Create an instance of {@link ArrayOfRing }
     * 
     */
    public ArrayOfRing createArrayOfRing() {
        return new ArrayOfRing();
    }

    /**
     * Create an instance of {@link ArrayOfDataElement }
     * 
     */
    public ArrayOfDataElement createArrayOfDataElement() {
        return new ArrayOfDataElement();
    }

    /**
     * Create an instance of {@link ArrayOfIndex }
     * 
     */
    public ArrayOfIndex createArrayOfIndex() {
        return new ArrayOfIndex();
    }

    /**
     * Create an instance of {@link Fields }
     * 
     */
    public Fields createFields() {
        return new Fields();
    }

    /**
     * Create an instance of {@link Envelope }
     * 
     */
    public Envelope createEnvelope() {
        return new Envelope();
    }

    /**
     * Create an instance of {@link ArrayOfSegment }
     * 
     */
    public ArrayOfSegment createArrayOfSegment() {
        return new ArrayOfSegment();
    }

    /**
     * Create an instance of {@link ArrayOfPolygon }
     * 
     */
    public ArrayOfPolygon createArrayOfPolygon() {
        return new ArrayOfPolygon();
    }

    /**
     * Create an instance of {@link PropertySetProperty }
     * 
     */
    public PropertySetProperty createPropertySetProperty() {
        return new PropertySetProperty();
    }

    /**
     * Create an instance of {@link RasterDef }
     * 
     */
    public RasterDef createRasterDef() {
        return new RasterDef();
    }

    /**
     * Create an instance of {@link SubtypeFieldInfo }
     * 
     */
    public SubtypeFieldInfo createSubtypeFieldInfo() {
        return new SubtypeFieldInfo();
    }

    /**
     * Create an instance of {@link TriangleStrip }
     * 
     */
    public TriangleStrip createTriangleStrip() {
        return new TriangleStrip();
    }

    /**
     * Create an instance of {@link TopologyMembership }
     * 
     */
    public TopologyMembership createTopologyMembership() {
        return new TopologyMembership();
    }

    /**
     * Create an instance of {@link GeometricNetworkMembership }
     * 
     */
    public GeometricNetworkMembership createGeometricNetworkMembership() {
        return new GeometricNetworkMembership();
    }

    /**
     * Create an instance of {@link Line }
     * 
     */
    public Line createLine() {
        return new Line();
    }

    /**
     * Create an instance of {@link PropertySet }
     * 
     */
    public PropertySet createPropertySet() {
        return new PropertySet();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Field }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.esri.com/schemas/ArcGIS/10.1", name = "Field")
    public JAXBElement<Field> createField(Field value) {
        return new JAXBElement<Field>(_Field_QNAME, Field.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Index }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.esri.com/schemas/ArcGIS/10.1", name = "Index")
    public JAXBElement<Index> createIndex(Index value) {
        return new JAXBElement<Index>(_Index_QNAME, Index.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link DEDataset }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.esri.com/schemas/ArcGIS/10.1", name = "DataElement")
    public JAXBElement<DEDataset> createDataElement(DEDataset value) {
        return new JAXBElement<DEDataset>(_DataElement_QNAME, DEDataset.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Subtype }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.esri.com/schemas/ArcGIS/10.1", name = "Subtype")
    public JAXBElement<Subtype> createSubtype(Subtype value) {
        return new JAXBElement<Subtype>(_Subtype_QNAME, Subtype.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Domain }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://www.esri.com/schemas/ArcGIS/10.1", name = "Domain")
    public JAXBElement<Domain> createDomain(Domain value) {
        return new JAXBElement<Domain>(_Domain_QNAME, Domain.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link XmlPropertySet }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Metadata", scope = DataElement.class)
    public JAXBElement<XmlPropertySet> createDataElementMetadata(XmlPropertySet value) {
        return new JAXBElement<XmlPropertySet>(_DataElementMetadata_QNAME, XmlPropertySet.class, DataElement.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Value", scope = PropertySetProperty.class)
    public JAXBElement<Object> createPropertySetPropertyValue(Object value) {
        return new JAXBElement<Object>(_PropertySetPropertyValue_QNAME, Object.class, PropertySetProperty.class, value);
    }

}
